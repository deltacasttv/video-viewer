constexpr char const * compute_shader_422_8 =
{
"#version 430\n"
"\n"
"layout(local_size_x = 8, local_size_y = 8) in;\n"
"\n"
"layout(rgba8, binding = 0) uniform image2D img_output;\n"
"layout(rgba8, binding = 1) uniform image2D img_input;\n"
"\n"
"vec4 yuv2rgba(vec4 yuvk)\n"
"{\n"
"    vec4 rgba;\n"
"    bool bt_709 = true; //TODO: pass this information from the code\n"
"\n"
"    rgba.x = 1.164 * (yuvk.x - 16.0 / 255.0) + ((float(bt_709) * 1.793) + (float(!bt_709)) * (1.596)) * (yuvk.z - 128.0 / 255.0);\n"
"    rgba.y = 1.164 * (yuvk.x - 16.0 / 255.0) - ((float(bt_709) * 0.534) + (float(!bt_709)) * (0.813)) * (yuvk.z - 128.0 / 255.0) - 0.213 * (yuvk.y - 128.0 / 255.0);\n"
"    rgba.z = 1.164 * (yuvk.x - 16.0 / 255.0) + ((float(bt_709) * 2.115) + (float(!bt_709)) * (2.018)) * (yuvk.y - 128.0 / 255.0);\n"
"    rgba.w = 1.0;\n"
"    return rgba;\n"
"}\n"
"\n"
"void main() {\n"
"    ivec2 coords = ivec2(gl_GlobalInvocationID);\n"
"    vec4 uyvy = imageLoad(img_input, ivec2(coords.x / 2, coords.y));\n"
"    bool odd_column = (mod(coords.x, 2.0) >= 1.0);\n"
"    vec4 yuvk;\n"
"    yuvk.x = (float(!odd_column)) * uyvy.y + (float(odd_column)) * uyvy.w;\n"
"    yuvk.y = uyvy.x;\n"
"    yuvk.z = uyvy.z;\n"
"    yuvk.w = 1.0;\n"
"\n"
"    vec4 pixel = yuv2rgba(yuvk);\n"
"\n"
"    imageStore(img_output, coords, pixel);\n"
"}\n"
}; 